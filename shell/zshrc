# Make sure the GRML zsh config is installed so that cd is good and other things..

# spaceship options {{{
# load completion and prompt
autoload -U compinit promptinit
promptinit  
compinit
prompt spaceship

SPACESHIP_PYENV_PREFIX="pyenv:("
SPACESHIP_PYENV_SUFFIX=") "

SPACESHIP_VENV_PREFIX="venv:("
SPACESHIP_VENV_SUFFIX=") "

SPACESHIP_BATTERY_THRESHOLD=4 

SPACESHIP_VI_MODE_SHOW=false

# }}}

# zsh options {{{ 

DISABLE_UNTRACKED_FILES_DIRTY="true"
HYPHEN_INSENSITIVE="true"
ENABLE_CORRECTION="true"
watch=(notme)
LOGCHECK=60
REPORTTIME=5
WORDCHARS='`~!@#$%^&*()-_=+[{]}\|;:",<.>/?'"'"

HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

# History Options
setopt append_history           # Dont overwrite history
setopt extended_history         # Also record time and duration of commands.
setopt share_history            # Share history between multiple shells
setopt hist_ignore_space        # prefix a command with space to not add it to history
setopt hist_expire_dups_first   # Clear duplicates when trimming internal hist.
setopt hist_find_no_dups        # remove duplicates during searches.
setopt hist_ignore_dups         # Ignore consecutive duplicates.
setopt hist_ignore_all_dups     # Remember only one unique copy of the command.
setopt hist_reduce_blanks       # Remove superfluous blanks.
setopt hist_save_no_dups        # Omit older commands in favor of newer ones.

# General Behaviour Options
setopt extended_glob            # allow negated matches: [^a] in globs
setopt nobeep                   # this is a beep free terminal thank you
setopt noshwordsplit            # use zsh-style word splitting

# Process Suspension Options
setopt no_hup                   # allow jobs to be started in the background
setopt longlistjobs             # display pid when suspending processes
setopt notify                   # report the status of background jobs immediately

# Changing Directories
setopt auto_cd                  # Allow changing directories without `cd`
setopt auto_pushd               # automatically push directories onto the dirstack
setopt pushd_ignore_dups        # Dont push copies of the same dir on stack.
setopt pushd_minus              # Reference stack entries with "-".

# Completion Options
setopt hash_list_all            # hash the entire command path before attempting completion
setopt always_to_end            # move to the end of the word after completion
setopt auto_menu                # get a menu of completion suggestions
setopt complete_in_word         # tab completion from inside words
unsetopt menu_complete          # make sure the completion menu can be shown

# }}}

# sourcing {{{

# environment information
source ~/.env
# general aliases
source ~/.aliases

# fzf key bindings
source "$FZF/key-bindings.zsh"

# zsh syntax highlighting
source "$ZSH_PLUGINS/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
# zsh autosuggestions
source "$ZSH_PLUGINS/zsh-autosuggestions/zsh-autosuggestions.zsh"
# zsh history substring search
source "$ZSH_PLUGINS/zsh-history-substring-search/zsh-history-substring-search.zsh"

# }}}

# vi mode {{{

bindkey -v
export KEYTIMEOUT=1 

# vi keys in tab complete menu
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -v '^?' backward-delete-char

# change cursor shape for different modes
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} == '' ]] ||
       [[ $1 == 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
  zle -K viins # go to vi insert mode
  echo -ne '\e[5 q' # use beam cursor for new prompts
}
zle -N zle-line-init
echo -ne '\e[5 q' # use beam cursor on startup
preexec() { echo -ne '\e[1 q' ; } 

# Edit line in vim with ctrl-e
autoload edit-command-line
zle -N edit-command-line
bindkey '^e' edit-command-line

# ci"
autoload -U select-quoted
zle -N select-quoted
for m in visual viopp; do
  for c in {a,i}{\',\",\`}; do
    bindkey -M $m $c select-quoted
  done
done

# ci{, ci(, di{ etc..
autoload -U select-bracketed
zle -N select-bracketed
for m in visual viopp; do
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $m $c select-bracketed
  done
done

# }}}

# key bindings {{{

# use ctrl-v then the key combination to get weird symbols
bindkey '^R' fzf-history-widget
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

# ctrl backspace and delete for deleting words forward and back
bindkey "^[[3;5~" delete-word
bindkey "^[[P" delete-char-or-list

# control up/down does a fuzzy history search
HISTORY_SUBSTRING_SEARCH_FUZZY=1
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down
# for some reason my terminal likes to switch between these codes for up and down
bindkey "^[OA" history-substring-search-up
bindkey "^[OB" history-substring-search-down
# }}}
